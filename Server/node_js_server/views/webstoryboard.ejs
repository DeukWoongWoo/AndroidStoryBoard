<!DOCTYPE html>
<html>

<head>
    <style>
        p {
            width: 30px;
            white-space: pre-line;
            word-break: break-all;
            /*text-overflow : ellipsis;*/
        }

    </style>
</head>

<body>
<div>
    <image></image>
    <svg currentScale="1" viewBox="0 0 1000 1000" id="storyboard-svg"
         style="background: white;">
        <rect id="storyboard-background" x="-5000" y="-5000" width="10000" height="10000"
              style="fill: #8BC5B7; stroke: black;  stroke-width: 100px;" onmousedown="startDrag(event)"/>

        <svg onmousedown="startDrag(event, this)">

            <rect x="400" y="10" width="500" height="500" fill=""></rect>
            <image x="400" y="10" height="500" width="500" xlink:href="https://www.google.co.kr/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png"></image>
        </svg>
        <svg onmousedown="startDrag(event, this)">
            <rect x="10" y="10" width="300" height="200"
                  style="stroke: white; fill: #D4C9AD; stroke-width: 1px;" id="test-rect"/>

            <circle cx="50" cy="100" r="25" style="stroke: black; fill: white;"/>
            <text  x="10" y="10" stroke="black" height="100px">

                <tspan x="10" y="70">Second line.</tspan>
            </text>

        </svg>
        <text id='tex' x="10" y="10" white-space="pre-line" width="50px" word-break="break-all">Firstkkkkkkkkk fg fg ggggggggggg   gggggggggg kkkkkkk line.</text>
    </svg>

</div>

</body>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
<script type="text/javascript" src="javascripts/d3/d3.js"></script>
<script src="javascripts/storyboard/Storyboard.js"></script>
<script>
    console.log($('#tex'));

    var storyboard = new Storyboard();
    storyboard.targetDiv('#storyboard-svg');

    $.get("/storyboard/a/jsontest.json", function(storyboardData){
        console.log(storyboardData.activity);
        storyboard.storyboardData(storyboardData);
        storyboard.drawActivityObject();
        storyboard.drawNextActivityLine();

    });

    /**
     *  위
     *      nextActivity를 보여주기 위한 선 드래그 할때 이동 가능하게 구현해야함
     *      텍스트 자동 줄 바꿈 구현 방법 찾아보기
     *
     *      서버로 부터 사용자가 등록한 스토리보드 데이터를 받아와서
     *      스토리보드 액티비티 오브젝트 그려주기 완료
     *  아래
     *      스토리보드의 확대, 축소, 이동 구현 완료
     */

    var storyboardSvg = document.getElementById('storyboard-svg');
    storyboardSvg.setAttribute('height', window.innerHeight * 0.4);
    storyboardSvg.setAttribute('width', window.innerWidth * 0.4);

    var box = storyboardSvg.viewBox.baseVal;
    var storyboardBack = document.getElementById('storyboard-background');
    var backWidth = storyboardBack.getAttribute('width');
    var backHeight = storyboardBack.getAttribute('height');

    $('#storyboard-svg').mouseover(function () {
        document.onmousewheel = function () {
            return false;
        }
    }).mouseout(function () {
        document.onmousewheel = null;
    });

    $("#storyboard-svg").on("mousewheel", function (event) {
        console.log();
        var zoomValue = event.originalEvent.wheelDelta;
        if (box.width + zoomValue * 7 > 0 && box.height + zoomValue * 7 > 0
                && box.width + zoomValue < backWidth && box.height + zoomValue < backHeight) {
            box.x -= zoomValue / 2;
            box.y -= zoomValue / 2;
            box.width += zoomValue;
            box.height += zoomValue;
        }
    });

    var bae = box.width / window.innerHeight * 0.4;
    var rX = 0, rY = 0;
    var targetObj;

    function startDrag(e, obj) {
        console.log(obj);
        var e_obj = window.event ? window.event : e;
        targetObj = obj;
        bae = box.width / (window.innerHeight * 0.4);

        if (obj) {
            rX = targetObj.getAttribute('x') - e_obj.clientX * bae;
            rY = targetObj.getAttribute('y') - e_obj.clientY * bae;
        } else {
            rX = box.x * (-1) - (e_obj.clientX * bae);
            rY = box.y * (-1) - (e_obj.clientY * bae);
        }

        document.onmousemove = moveDrag;
        document.onmouseup = stopDrag;
        if (e_obj.preventDefault)e_obj.preventDefault();
    }

    function moveDrag(e) {
        var e_obj = window.event ? window.event : e;
        bae = box.width / (window.innerHeight * 0.4);
        if (targetObj) {
            targetObj.setAttribute('x', (rX + e_obj.clientX * bae));
            targetObj.setAttribute('y', (rY + e_obj.clientY * bae));
        } else {
            if (rX + (e_obj.clientX * bae) < backWidth / 2
                    && box.width - (rX + (e_obj.clientX * bae)) < backWidth / 2)
                box.x = -(rX + (e_obj.clientX * bae));
            if (rY + (e_obj.clientY * bae) < backHeight / 2
                    && box.height - (rY + (e_obj.clientY * bae)) < backHeight / 2)
                box.y = -(rY + (e_obj.clientY * bae));
        }
        return false;
    }

    function stopDrag() {
        document.onmousemove = null;
        document.onmouseup = null;
    }


</script>

</html>

